//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class ApiMoveScores: APIModel {

    public var distraction: Int?

    public var safeness: Int?

    public var speed: Int?

    public var total: Int?

    public init(distraction: Int? = nil, safeness: Int? = nil, speed: Int? = nil, total: Int? = nil) {
        self.distraction = distraction
        self.safeness = safeness
        self.speed = speed
        self.total = total
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        distraction = try container.decodeIfPresent("distraction")
        safeness = try container.decodeIfPresent("safeness")
        speed = try container.decodeIfPresent("speed")
        total = try container.decodeIfPresent("total")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(distraction, forKey: "distraction")
        try container.encodeIfPresent(safeness, forKey: "safeness")
        try container.encodeIfPresent(speed, forKey: "speed")
        try container.encodeIfPresent(total, forKey: "total")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? ApiMoveScores else { return false }
      guard self.distraction == object.distraction else { return false }
      guard self.safeness == object.safeness else { return false }
      guard self.speed == object.speed else { return false }
      guard self.total == object.total else { return false }
      return true
    }

    public static func == (lhs: ApiMoveScores, rhs: ApiMoveScores) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
