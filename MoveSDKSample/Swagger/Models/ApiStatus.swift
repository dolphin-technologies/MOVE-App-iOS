//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class ApiStatus: APIModel {

    /** Error code, 0 = OK, negative means some error */
    public var code: Int

    /** error message or the string 'OK' */
    public var message: String

    public var technicalMsg: String?

    /** Text error code (optional) */
    public var textCode: String?

    public init(code: Int, message: String, technicalMsg: String? = nil, textCode: String? = nil) {
        self.code = code
        self.message = message
        self.technicalMsg = technicalMsg
        self.textCode = textCode
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        code = try container.decode("code")
        message = try container.decode("message")
        technicalMsg = try container.decodeIfPresent("technicalMsg")
        textCode = try container.decodeIfPresent("textCode")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encode(code, forKey: "code")
        try container.encode(message, forKey: "message")
        try container.encodeIfPresent(technicalMsg, forKey: "technicalMsg")
        try container.encodeIfPresent(textCode, forKey: "textCode")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? ApiStatus else { return false }
      guard self.code == object.code else { return false }
      guard self.message == object.message else { return false }
      guard self.technicalMsg == object.technicalMsg else { return false }
      guard self.textCode == object.textCode else { return false }
      return true
    }

    public static func == (lhs: ApiStatus, rhs: ApiStatus) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
