//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class ApiAddDeviceTokenRequest: APIModel {

    public var deviceToken: String?

    public var deviceTokenBundle: String?

    public var deviceTokenType: String?

    public var payloadVersion: Int?

    public init(deviceToken: String? = nil, deviceTokenBundle: String? = nil, deviceTokenType: String? = nil, payloadVersion: Int? = nil) {
        self.deviceToken = deviceToken
        self.deviceTokenBundle = deviceTokenBundle
        self.deviceTokenType = deviceTokenType
        self.payloadVersion = payloadVersion
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        deviceToken = try container.decodeIfPresent("deviceToken")
        deviceTokenBundle = try container.decodeIfPresent("deviceTokenBundle")
        deviceTokenType = try container.decodeIfPresent("deviceTokenType")
        payloadVersion = try container.decodeIfPresent("payloadVersion")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(deviceToken, forKey: "deviceToken")
        try container.encodeIfPresent(deviceTokenBundle, forKey: "deviceTokenBundle")
        try container.encodeIfPresent(deviceTokenType, forKey: "deviceTokenType")
        try container.encodeIfPresent(payloadVersion, forKey: "payloadVersion")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? ApiAddDeviceTokenRequest else { return false }
      guard self.deviceToken == object.deviceToken else { return false }
      guard self.deviceTokenBundle == object.deviceTokenBundle else { return false }
      guard self.deviceTokenType == object.deviceTokenType else { return false }
      guard self.payloadVersion == object.payloadVersion else { return false }
      return true
    }

    public static func == (lhs: ApiAddDeviceTokenRequest, rhs: ApiAddDeviceTokenRequest) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
