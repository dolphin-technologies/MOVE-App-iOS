//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class ApiMoveDistractionEvent: APIModel {

    public var durationMinutes: Int?

    public var endIsoTime: String?

    public var startIsoTime: String?

    public var type: ApiDistractionEventType?

    public init(durationMinutes: Int? = nil, endIsoTime: String? = nil, startIsoTime: String? = nil, type: ApiDistractionEventType? = nil) {
        self.durationMinutes = durationMinutes
        self.endIsoTime = endIsoTime
        self.startIsoTime = startIsoTime
        self.type = type
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        durationMinutes = try container.decodeIfPresent("durationMinutes")
        endIsoTime = try container.decodeIfPresent("endIsoTime")
        startIsoTime = try container.decodeIfPresent("startIsoTime")
        type = try container.decodeIfPresent("type")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(durationMinutes, forKey: "durationMinutes")
        try container.encodeIfPresent(endIsoTime, forKey: "endIsoTime")
        try container.encodeIfPresent(startIsoTime, forKey: "startIsoTime")
        try container.encodeIfPresent(type, forKey: "type")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? ApiMoveDistractionEvent else { return false }
      guard self.durationMinutes == object.durationMinutes else { return false }
	  guard self.endIsoTime == object.endIsoTime else { return false }
	  guard self.startIsoTime == object.startIsoTime else { return false }
      guard self.type == object.type else { return false }
      return true
    }

    public static func == (lhs: ApiMoveDistractionEvent, rhs: ApiMoveDistractionEvent) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
