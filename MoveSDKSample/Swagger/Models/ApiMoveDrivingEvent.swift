//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class ApiMoveDrivingEvent: APIModel {

    public var value: Int

    public var lat: Double?

    public var lon: Double?

    public var time: String?

    public var type: ApiDBEType?

    public init(value: Int, lat: Double? = nil, lon: Double? = nil, time: String? = nil, type: ApiDBEType? = nil) {
        self.value = value
        self.lat = lat
        self.lon = lon
        self.time = time
        self.type = type
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        value = try container.decode("value")
        lat = try container.decodeIfPresent("lat")
        lon = try container.decodeIfPresent("lon")
        time = try container.decodeIfPresent("time")
        type = try container.decodeIfPresent("type")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encode(value, forKey: "value")
        try container.encodeIfPresent(lat, forKey: "lat")
        try container.encodeIfPresent(lon, forKey: "lon")
        try container.encodeIfPresent(time, forKey: "time")
        try container.encodeIfPresent(type, forKey: "type")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? ApiMoveDrivingEvent else { return false }
      guard self.value == object.value else { return false }
      guard self.lat == object.lat else { return false }
      guard self.lon == object.lon else { return false }
	  guard self.time == object.time else { return false }
      guard self.type == object.type else { return false }
      return true
    }

    public static func == (lhs: ApiMoveDrivingEvent, rhs: ApiMoveDrivingEvent) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
